name: Create New Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-15
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Select Xcode Version
        run: |
          sudo xcode-select -s /Applications/Xcode_16.0.app # Swift 5.10, iOS 18 SDK
          swift --version # Verify Swift version for debugging

      - name: Install dependencies (packages)
        run: |
          curl -LO https://github.com/ProcursusTeam/ldid/releases/download/v2.1.5-procursus7/ldid_macosx_x86_64
          sudo install -m755 ldid_macosx_x86_64 /usr/local/bin/ldid
          brew install 7zip gnu-sed

      - name: Clean Build Environment
        run: |
          # Clean Xcode build cache
          xcodebuild -scheme "feather (Release)" -sdk iphoneos clean
          # Clean Swift Package Manager cache (if applicable)
          if [ -f Package.swift ]; then
            swift package clean
          fi
          # Remove any existing derived data for a fresh start
          rm -rf ~/Library/Developer/Xcode/DerivedData

      - name: Compile
        run: | 
          mkdir upload
          xcodebuild -scheme "feather (Release)" -sdk iphoneos -configuration Release SWIFT_VERSION=5.10 IPHONEOS_DEPLOYMENT_TARGET=15.0 build
          make package SCHEME="'feather (Release)'" SWIFT_VERSION=5.10 IPHONEOS_DEPLOYMENT_TARGET=15.0
          mv packages/* upload/

      - name: Get Version Number
        id: get_version
        run: |
          VERSION=$( /usr/libexec/PlistBuddy -c "Print CFBundleShortVersionString" Payload/feather.app/Info.plist )
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Setup
        run: |
          mv upload/feather.ipa upload/feather_v${{ env.VERSION }}.ipa
          cp upload/feather_v${{ env.VERSION }}.ipa upload/feather_v${{ env.VERSION }}.tipa

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Feather v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          files: |
            upload/*ipa
          generate_release_notes: true
          fail_on_unmatched_files: true
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}